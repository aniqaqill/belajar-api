{"version":3,"sources":["components/AddMovie.module.css","components/Movie.module.css","components/MoviesList.module.css","components/Movie.js","components/MoviesList.js","components/AddMovie.js","App.js","index.js"],"names":["module","exports","Movie","props","className","classes","movie","title","releaseDate","openingText","MovieList","movies","map","key","id","AddMovie","titleRef","useRef","openingTextRef","releaseDateRef","onSubmit","event","preventDefault","current","value","onAddMovie","control","htmlFor","type","ref","rows","App","useState","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","useCallback","fetch","response","ok","Error","json","data","loadedMovies","push","message","method","body","JSON","stringify","headers","console","log","useEffect","content","length","MoviesList","deleteMoviesHandler","status","Fragment","onClick","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6fb80fbb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddMovie_control__3PqxH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__3FnCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__2CkW3\"};","import React from 'react';\r\n\r\nimport classes from './Movie.module.css';\r\n\r\nconst Movie = (props) => {\r\n  return (\r\n    <li className={classes.movie}>\r\n      <h2>{props.title}</h2>\r\n      <h3>{props.releaseDate}</h3>\r\n      <p>{props.openingText}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\n\r\nimport Movie from './Movie';\r\nimport classes from './MoviesList.module.css';\r\n\r\nconst MovieList = (props) => {\r\n  return (\r\n    <ul className={classes['movies-list']}>\r\n      {props.movies.map((movie) => (\r\n        <Movie\r\n          key={movie.id}\r\n          title={movie.title}\r\n          releaseDate={movie.releaseDate}\r\n          openingText={movie.openingText}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React, { useRef } from 'react';\r\n\r\nimport classes from './AddMovie.module.css';\r\n\r\nfunction AddMovie(props) {\r\n  const titleRef = useRef('');\r\n  const openingTextRef = useRef('');\r\n  const releaseDateRef = useRef('');\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n\r\n    // could add validation here...\r\n\r\n    const movie = {\r\n      title: titleRef.current.value,\r\n      openingText: openingTextRef.current.value,\r\n      releaseDate: releaseDateRef.current.value,\r\n    };\r\n\r\n    props.onAddMovie(movie);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className={classes.control}>\r\n        <label htmlFor='title'>Title</label>\r\n        <input type='text' id='title' ref={titleRef} />\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor='opening-text'>Opening Text</label>\r\n        <textarea rows='5' id='opening-text' ref={openingTextRef}></textarea>\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor='date'>Release Date</label>\r\n        <input type='text' id='date' ref={releaseDateRef} />\r\n      </div>\r\n      <button>Add Movie</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddMovie;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nimport MoviesList from \"./components/MoviesList\";\r\nimport AddMovie from \"./components/AddMovie\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchMoviesHandler = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\r\n        \"https://belajarapi-85888-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      const loadedMovies = [];\r\n\r\n      for (const key in data) {\r\n        loadedMovies.push({\r\n          id: key,\r\n          title: data[key].title,\r\n          openingText: data[key].openingText,\r\n          releaseDate: data[key].releaseDate,\r\n        });\r\n      }\r\n\r\n      setMovies(loadedMovies);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMoviesHandler();\r\n  }, [fetchMoviesHandler]);\r\n\r\n  async function addMovieHandler(movie) {\r\n    const response = await fetch(\r\n      \"https://belajarapi-85888-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify(movie),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    console.log(data);\r\n  }\r\n\r\n  let content = <p>Found no movies.</p>;\r\n\r\n  if (movies.length > 0) {\r\n    content = <MoviesList movies={movies} />;\r\n  }\r\n\r\n  if (error) {\r\n    content = <p>{error}</p>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    content = <p>Loading...</p>;\r\n  }\r\n\r\n  const deleteMoviesHandler = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\r\n        \"https://belajarapi-85888-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\",\r\n        {\r\n          method: \"delete\",\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const message = \"Error with Status Code: \" + response.status;\r\n        throw new Error(message);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(\"Error: \" + error.message);\r\n    }\r\n    setIsLoading(true);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <AddMovie onAddMovie={addMovieHandler} />\r\n      </section>\r\n      <section>\r\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\r\n      </section>\r\n      <section>{content}</section>\r\n      <section>\r\n        <button onClick={deleteMoviesHandler}>Delete Movies</button>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}